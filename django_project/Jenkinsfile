pipeline {
    agent any
    tools {dockerTool  "docker" } 
    environment {     
        registry = "roshnihande/capstone-project" 
        registryCredential = 'dockerhub-credentials' 
        dockerImage = ''    
        kubeconfigCred = 'kubectlconfig' 
    } 
    stages {
        stage('Checkout') {
            steps {
                // Use GitHub credentials to clone repository
                withCredentials([usernamePassword(credentialsId: 'github-credentials', usernameVariable: 'GITHUB_USERNAME', passwordVariable: 'GITHUB_PASSWORD')]) {
                    git credentialsId: 'github-credentials', url: 'https://github.com/roshnihande/capstone-project.git'
                }
            }
        }
        // stage('test') {
        //     steps {
        //       script {
        //         // List contents of workspace directory
        //         sh 'ls -l'
        //         sh 'ls -l /var/jenkins_home/workspace/Django-python-application/django_project'  
        //     }
        //     }

        // }
        // stage('Adjust Permissions') {
        //     steps {
        //         script {
        //             // Change permissions for django_project directory (replace with actual path if different)
        //             sh 'chmod u+rX /var/jenkins_home/workspace/Django-python-application/django_project'
        //         }
        //     }
        // }
        
        
        // stage('Build Docker Image') {
        //     steps {
        //       script {
        //         // Build Docker image from Django application code
        //         sh 'docker build -t my-django-app django_project'
        //     }
        //     }
        // }

        // stage('Build Docker Image') {
        //     steps {
        //         script {
        //             // Push the image using credentials stored in Jenkins
        //             docker.withRegistry('', registryCredential) {
        //                 def myImage = docker.build("roshnihande/capstone-project:latest", "-f django_project/Dockerfile django_project") 
        //                 myImage.push() // Build and assign to variable
        //             }
        //         }
        //     }
        // }        

        stage('Deploy App on k8s') {
          steps {
            withCredentials([
                string(credentialsId: 'my_kubernetes', variable: 'api_token')
               
            ]) {
              sh 'kubectl --token $api_token --server https://127.0.0.1:6443 apply -f django_project/deployment.yml --validate=false' 
            }
          }
        }


    }

}

